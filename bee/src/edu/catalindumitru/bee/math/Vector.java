package edu.catalindumitru.bee.math;

/**
 * Created by IntelliJ IDEA.
 * User: colin
 * Date: 7/4/11
 * Time: 3:00 PM
 */
public class Vector {
    public static final int X = 0;
    public static final int Y = 1;
    public static final int Z = 2;
    public static final int W = 3;

    protected float elem[];
    protected int size;

    //------------------------------------------------------------------------------------------------------------------
    //------------------------------------------------------------------------------------------------------------------
    public Vector() {
        this.elem = new float[0];
        this.size = 0;
    }

    //------------------------------------------------------------------------------------------------------------------
    //------------------------------------------------------------------------------------------------------------------
    public Vector(int size) {
        this.size = size;
        this.elem = new float[size];
    }

    //------------------------------------------------------------------------------------------------------------------
    //------------------------------------------------------------------------------------------------------------------
    public Vector(float elem[]) {
        this.size = elem.length;

        for (int i = 0; i < this.size; i++)
            this.elem[i] = elem[i];
    }

    //------------------------------------------------------------------------------------------------------------------
    //------------------------------------------------------------------------------------------------------------------
    public Vector(Vector other) {
        this(other.elem);
    }

    //------------------------------------------------------------------------------------------------------------------
    //------------------------------------------------------------------------------------------------------------------
    public float norm() {
        float sum = 0f;

        for (int i = 0; i < this.size; i++)
            sum += this.elem[i] * this.elem[i];

        return (float) Math.sqrt(sum);
    }

    //------------------------------------------------------------------------------------------------------------------
    //------------------------------------------------------------------------------------------------------------------
    public void normalize() {
        float length = this.norm();

        for (int i = 0; i < this.size; i++)
            this.elem[i] = this.elem[i] / length;
    }

    //------------------------------------------------------------------------------------------------------------------
    //------------------------------------------------------------------------------------------------------------------
    public void set(int pos, float value) {
        if (pos < 0 || pos >= this.size)
            return;

        this.elem[pos] = value;
    }

    //------------------------------------------------------------------------------------------------------------------
    //------------------------------------------------------------------------------------------------------------------
    public float get(int pos) {
        if (pos < 0 || pos >= this.size)
            throw new ArrayIndexOutOfBoundsException();

        return this.elem[pos];
    }

    //------------------------------------------------------------------------------------------------------------------
    //------------------------------------------------------------------------------------------------------------------
    public void add(Vector other) throws ArithmeticException {
        if (this.size != other.size)
            throw new ArithmeticException("vector sizes do not match");

        for (int i = 0; i < this.size; i++)
            this.elem[i] += other.elem[i];
    }

    //------------------------------------------------------------------------------------------------------------------
    //------------------------------------------------------------------------------------------------------------------
    public void add(int pos, float value) {
        if (pos < 0 || pos >= this.size)
            throw new ArrayIndexOutOfBoundsException();

        this.elem[pos] += value;
    }

    //------------------------------------------------------------------------------------------------------------------
    //------------------------------------------------------------------------------------------------------------------
    public void multiply(float scalar) {
        for (int i = 0; i < this.size; i++)
            this.elem[i] *= scalar;
    }

    //------------------------------------------------------------------------------------------------------------------
    //------------------------------------------------------------------------------------------------------------------
    public int size() {
        return this.size;
    }

    //------------------------------------------------------------------------------------------------------------------
    //------------------------------------------------------------------------------------------------------------------
    public Vector clone() {
        return new Vector(this);
    }
}
